name: "CI"

on:
  pull_request:
    branches: [$default-branch]
  push:
    branches: [$default-branch]

# Permissions needed for EnricoMi test results publishing
permissions:
  contents: read
  checks: write
  pull-requests: write

concurrency:
  group: "${{ github.workflow }}-${{ github.ref }}"
  cancel-in-progress: ${{ github.event_name == 'pull_request' }}

jobs:
  graphql:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v4

      - name: Check the subgraph against the graphql-gateway
        uses: octanner/graphqlgateway-actions/subgraph-check@v1
        with:
          apollo-key: "${{ secrets.OCT_VAULT_APOLLOSTUDIO_CCGATEWAY_KEY }}"
          schema-file: "./src/main/resources/graphql/schema.graphqls"
          subgraph-name: ""

  build:
    runs-on: ubuntu-latest

    env:
      OCT_VAULT_SHARED_READ_ARTIFACTORY_PASSWORD: ${{ secrets.OCT_VAULT_SHARED_READ_ARTIFACTORY_PASSWORD }}
      OCT_VAULT_SHARED_READ_ARTIFACTORY_USERNAME: ${{ secrets.OCT_VAULT_SHARED_READ_ARTIFACTORY_USERNAME }}

    services:
      postgres:
        image: postgres:16-alpine
        env:
          POSTGRES_HOST_AUTH_METHOD: trust
          POSTGRES_USER: postgres
        # Set health checks to wait until postgres has started
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
        ports:
          - 5432:5432
      redis:
        image: redis:5-alpine
        # Set health check to wait until redis has started
        options: >-
          --health-cmd "redis-cli ping"
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
        ports:
          - 6379:6379

    steps:
      - name: Checkout Code
        uses: actions/checkout@v4

      - name: Cache Maven
        uses: octanner/cache-action@v1
        with:
          package-manager: "maven"

      - name: Setup Java
        uses: actions/setup-java@v4
        with:
          distribution: "corretto"
          java-version: "21"

      # Use a dedicate step for installing dependencies
      # This makes troubleshooting caching easier
      - name: Install dependencies
        run: ./mvnw dependency:go-offline -s settings.xml

      - name: compile
        run: ./mvnw compile -s settings.xml

      - name: fmt:check
        run: ./mvnw fmt:check -s settings.xml

      - name: checkstyle:check
        run: ./mvnw checkstyle:check -s settings.xml

      - name: spotbugs:check
        run: ./mvnw spotbugs:check -s settings.xml

      - name: pmd:check
        run: ./mvnw pmd:check -s settings.xml

      - name: test
        run: ./mvnw test -s settings.xml

      - name: Uploading Artifacts - surefire-reports
        uses: actions/upload-artifact@v4
        if: always()  # Run even if tests fail
        with:
          name: surefire-reports
          path: target/surefire-reports/
          overwrite: true

      - name: Uploading Artifacts - jacoco
        uses: actions/upload-artifact@v4
        if: always()  # Run even if tests fail
        with:
          name: jacoco
          path: target/site/jacoco/
          overwrite: true

      - name: Publish Test Results
        uses: EnricoMi/publish-unit-test-result-action@v2
        if: always()  # Run even if tests fail
        with:
          files: "**/target/surefire-reports/**/*.xml"
          check_name: "Test Results"
          comment_mode: always
          compare_to_earlier_commit: true
          report_individual_runs: true
          check_run_annotations: "all tests"
          job_summary: true

      - name: Upload Coverage to Codacy
        uses: codacy/codacy-coverage-reporter-action@v1
        with:
          project-token: ${{ secrets.CODACY_PROJECT_TOKEN }}
