name: "CI"

on:
  pull_request:
    branches: [$default-branch]
  push:
    branches: [$default-branch]

concurrency:
  group: "${{ github.workflow }}-${{ github.ref }}"
  cancel-in-progress: ${{ github.event_name == 'pull_request' }}

jobs:
  ci:
    runs-on: ubuntu-latest

    env:
      OCT_VAULT_SHARED_READ_ARTIFACTORY_ACCESS_TOKEN: ${{ secrets.OCT_VAULT_SHARED_READ_ARTIFACTORY_ACCESS_TOKEN }}

    # These permissions are required to pull organizational level private packages
    # You must grant your repo access from the package
    # Additional permissions (checks, pull-requests) needed for EnricoMi test results publishing
    permissions:
      contents: read
      packages: read
      checks: write
      pull-requests: write

    steps:
      - name: Checkout Code
        uses: actions/checkout@v4

      - name: Cache NPM
        uses: octanner/cache-action@v1
        with:
          package-manager: "yarn"

      - name: Setup Node
        uses: actions/setup-node@v4
        with:
          node-version: "22"

      - name: Setup .npmrc
        run: |
          echo "@octanner:registry=https://npm.pkg.github.com/" >> ~/.npmrc
          echo "@octanner-ui:registry=https://artifactory.octanner.net/api/npm/oct-npmjs/" >> ~/.npmrc
          echo "//npm.pkg.github.com/:_authToken=${{ secrets.GITHUB_TOKEN }}" >> ~/.npmrc
          echo "//artifactory.octanner.net/api/npm/oct-npmjs/:_auth=$OCT_VAULT_SHARED_READ_ARTIFACTORY_ACCESS_TOKEN" >> ~/.npmrc

      # Use a dedicate step for installing dependencies
      # This makes troubleshooting caching easier
      - name: Install Dependencies
        run: yarn install

      - name: build
        run: yarn build

      - name: Run Tests
        run: yarn test

      - name: Publish Test Results
        uses: EnricoMi/publish-unit-test-result-action@v2
        if: always()  # Run even if tests fail
        with:
          files: "./reports/junit/**/*.xml"
          check_name: "Test Results"
          comment_mode: always
          compare_to_earlier_commit: true
          report_individual_runs: true
          check_run_annotations: "all tests"
          job_summary: true
